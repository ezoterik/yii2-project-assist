<?xml version="1.0"?>
<ruleset name="Yii2Custom">
    <description>A custom coding standard witch is based on "yiisoft/yii2-coding-standards"</description>

    <!-- Start partially copy from "yiisoft/yii2-coding-standards" -->

    <rule ref="PSR2">
        <!-- Property names MUST start with an initial underscore if they are private. -->
        <!-- <exclude name="PSR2.Classes.PropertyDeclaration.Underscore"/> -->

        <!-- Opening parenthesis of a multi-line function call must be the last content on the line. -->
        <!-- Closing parenthesis of a multi-line function call must be on a line by itself. -->
        <!-- Only one argument is allowed per line in a multi-line function call. -->
        <exclude name="PEAR.Functions.FunctionCallSignature"/>

        <!-- We don't have line length (line width) limits. -->
        <exclude name="Generic.Files.LineLength"/>

        <!-- CASE keyword must be indented 4 spaces from SWITCH keyword. -->
        <exclude name="PSR2.ControlStructures.SwitchDeclaration"/>
    </rule>

    <!-- ... other Yii2 specific rules. -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- If string doesn't contain variables or single quotes, use single quotes. -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage.NotRequired"/>

    <!-- Replaces Yii2_Sniffs_Files_SpacesAroundConcatSniff -->
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <!-- Replaces Yii2_Sniffs_Properties_PrivatePropertiesUnderscoreSniff -->
    <!-- <rule ref="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/> -->

    <!-- https://github.com/squizlabs/PHP_CodeSniffer/issues/1008 -->
    <rule ref="Squiz.ControlStructures.ControlSignature">
        <properties>
            <property name="requiredSpacesBeforeColon" value="0"/>
        </properties>
    </rule>

    <!-- Ignore for migrations. -->
    <!-- Ignore missing namespace for migrations -->
    <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
        <exclude-pattern>m\d{6}_\d{6}_.+\.php$</exclude-pattern>
    </rule>
    <!-- Ignore camel caps format for class name of migrations -->
    <rule ref="Squiz.Classes.ValidClassName.NotCamelCaps">
        <exclude-pattern>m\d{6}_\d{6}_.+\.php$</exclude-pattern>
    </rule>

    <!-- Ignore for tests. -->
    <!-- Ignore method name prefixed with underscore to indicate visibility -->
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <exclude-pattern>tests?/*(Cest|Test).php$</exclude-pattern>
    </rule>
    <!-- Ignore declare new symbols and execute logic with side effects same file -->
    <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
        <exclude-pattern>/tests?*/_bootstrap.php$</exclude-pattern>
        <exclude-pattern>/web/(index|index-test).php$</exclude-pattern>
    </rule>

    <exclude-pattern>*/i18n/data/*</exclude-pattern>
    <exclude-pattern>*/views/errorHandler/*</exclude-pattern>
    <exclude-pattern>*/requirements/*</exclude-pattern>

    <exclude-pattern>ProfileTarget.php</exclude-pattern>

    <!-- End partially copy from "yiisoft/yii2-coding-standards" -->

    <!-- Start custom standards -->

    <!-- Ignore declare new symbols and execute logic with side effects same file -->
    <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
        <exclude-pattern>bootstrap.php</exclude-pattern>
    </rule>

    <rule ref="Generic.ControlStructures.InlineControlStructure"/>

    <!-- [] instead of array() -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <rule ref="Generic.ControlStructures.DisallowYodaConditions"/>

    <rule ref="Generic.Files.LineEndings"/>

    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="spacing" value="0"/>
        </properties>
    </rule>

    <rule ref="Generic.Metrics.NestingLevel"/>

    <rule ref="Generic.PHP.ForbiddenFunctions"/>

    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing">
        <properties>
            <property name="spacing" value="0"/>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <rule ref="Squiz.Operators.ValidLogicalOperators"/>

    <exclude-pattern>/vendor/*</exclude-pattern>
    <exclude-pattern>/_ide_components.php</exclude-pattern>

    <!-- Possible rules: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Customisable-Sniff-Properties -->
    <!-- Possible rules: https://github.com/hellowearemito/yii2-coding-standards/blob/master/Application/ruleset.xml -->
</ruleset>
